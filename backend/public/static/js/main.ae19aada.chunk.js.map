{"version":3,"sources":["context/AppContext.jsx","services/api/auth.js","components/organisms/Auth/SignInForm/SignInForm.jsx","components/organisms/Auth/SignInForm/SignUpForm.jsx","containers/Auth/index.jsx","components/molecules/buttons/LogoutButton.jsx","components/molecules/Cards/Post.jsx","services/api/graph.js","config/constants.js","services/api/users.js","hooks/api/users.js","components/organisms/Forms/EditProfile/EditProfile.jsx","services/api/posts.js","hooks/api/posts.js","containers/Profile/index.jsx","components/organisms/Forms/CreatePost/CreatePost.jsx","containers/CreatePostScreen/index.jsx","containers/PostScreen/index.jsx","containers/FeedScreen/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AppContext","createContext","AppWrapper","children","useState","authToken","setAuthToken","currentUser","setCurrentUser","darkMode","setDarkMode","headerShown","setHeaderShown","footerShown","setFooterShown","sharedState","breadcrumbs","setBreadcrumbs","Provider","value","useAppContext","useContext","getAuthToken","email","password","a","fetch","API_BASE_URL","method","headers","body","JSON","stringify","response","json","token","createAccount","data","SignInForm","history","useHistory","initialValues","validate","values","errors","test","onSubmit","setSubmitting","setErrors","then","user","localStorage","setItem","exp","Date","getTime","push","catch","err","console","log","message","touched","handleChange","handleBlur","handleSubmit","isSubmitting","className","htmlFor","type","name","id","onChange","onBlur","SignUpForm","Auth","signUp","setSignUp","onClick","LogoutButton","props","removeItem","Post","post","linked","MyLink","Link","to","src","profilePictureUrl","alt","style","fontSize","dayjs","parseInt","createdAt","format","text","extend","RelativeTime","client","GraphQLClient","graph","QUERY","AUTH_TOKEN","VAR","request","authorization","getUser","userId","username","gql","input","updateUser","useGetUser","useQuery","EditProfile","onCancel","users","updateUserMutation","queryClient","useQueryClient","useMutation","onSuccess","variables","invalidateQueries","useUpdateUser","bio","useEffect","isSuccess","mutate","placeholder","getPosts","isFollowing","getPost","postId","useGetPosts","_key","useInfiniteQuery","pageParam","skip","getNextPageParam","lastPage","useCreatePost","setQueryData","oldData","_newData","parse","pages","posts","unshift","createPost","onError","useDeletePost","some","page","find","p","filter","Profile","postsQuery","editProfile","setEditProfile","e","map","flat","CreatePost","$form","useRef","createPostMutation","current","resetForm","setTimeout","reset","innerRef","minHeight","isError","CreatePostScreen","PostScreen","match","staleTime","useGetPost","params","deletePostMutation","FeedScreen","title","App","getItem","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","QueryClient","defaultOptions","queries","retry","failureCount","error","ReactDOM","render","StrictMode","QueryClientProvider","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.ae19aada.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst AppContext = createContext();\n\nexport function AppWrapper({ children }) {\n  const [authToken, setAuthToken] = useState();\n  const [currentUser, setCurrentUser] = useState();\n  const [darkMode, setDarkMode] = useState();\n  const [headerShown, setHeaderShown] = useState(true);\n  const [footerShown, setFooterShown] = useState(true);\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n\n  let sharedState = {\n    authToken,\n    setAuthToken,\n    currentUser,\n    setCurrentUser,\n    darkMode,\n    setDarkMode,\n    headerShown,\n    setHeaderShown,\n    footerShown,\n    setFooterShown,\n    breadcrumbs,\n    setBreadcrumbs,\n  };\n\n  return (\n    <AppContext.Provider value={sharedState}>{children}</AppContext.Provider>\n  );\n}\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n","import { API_BASE_URL } from \"../../config/constants\";\n\nexport const getAuthToken = async (email, password) => {\n  const response = await fetch(API_BASE_URL + \"/auth\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  });\n  const token = await response.json();\n  return token;\n};\n\nexport const createAccount = async ({ email, password }) => {\n  const response = await fetch(API_BASE_URL + \"/signup\", {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  });\n  const data = await response.json();\n  return data;\n};\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport { getAuthToken } from \"../../../../services/api/auth\";\nimport { useAppContext } from \"../../../../context/AppContext\";\nimport { useHistory } from \"react-router\";\n\nexport default function SignInForm() {\n  const { authToken, setAuthToken, setCurrentUser } = useAppContext();\n  const history = useHistory();\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validate={(values) => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting, setErrors, errors }) => {\n        getAuthToken(values.email, values.password)\n          .then((data) => {\n            if (data.errors) {\n              setErrors({ ...errors, ...data.errors });\n              return;\n            }\n            let { token, user } = data;\n            setCurrentUser(user);\n            setAuthToken(token);\n            localStorage.setItem(\n              \"authToken\",\n              JSON.stringify({\n                token: token,\n                exp: new Date().getTime() + 24 * 60 * 60 * 1000,\n                user,\n              })\n            );\n            history.push(\"/\");\n          })\n          .catch((err) => {\n            console.log(err.message);\n          });\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          className=\"form flex flex-col items-center rounded bg-gray-300 p-10 shadow-md max-w-96 w-full\"\n        >\n          <div className=\"text-2xl mb-8\">Sign In</div>\n          <div className=\"form-control flex flex-col  my-1 text-lg w-full\">\n            <label htmlFor=\"email\" className=\"flex text-xs text-gray-700\">\n              email\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className=\"flex w-full\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            <div className=\"err text-red-600 text-xs font-mono\">\n              {errors.email && touched.email && errors.email}\n            </div>\n          </div>\n          <div className=\"form-control flex flex-col my-1 text-lg w-full\">\n            <label htmlFor=\"password\" className=\"flex text-xs text-gray-700\">\n              password\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              className=\"flex w-full\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            <div className=\"err text-red-600 text-xs font-mono\">\n              {errors.password && touched.password && errors.password}\n            </div>\n          </div>\n          <div className=\"actions mt-3\">\n            <button\n              type=\"submit\"\n              className=\"w-full p-3 text-center text-blue-500 \"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n}\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport { createAccount, getAuthToken } from \"../../../../services/api/auth\";\nimport { useAppContext } from \"../../../../context/AppContext\";\nimport { useHistory } from \"react-router\";\n\nexport default function SignUpForm() {\n  const { authToken, setAuthToken, setCurrentUser } = useAppContext();\n  const history = useHistory();\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validate={(values) => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = \"Required\";\n        } else if (\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n          errors.email = \"Invalid email address\";\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting, setErrors, errors }) => {\n        createAccount({ email: values.email, password: values.password })\n          .then((data) => {\n            if (data.errors) {\n              setErrors({ ...errors, ...data.errors });\n              return;\n            }\n            let { token, user } = data;\n            setCurrentUser(user);\n            setAuthToken(token);\n            localStorage.setItem(\n              \"authToken\",\n              JSON.stringify({\n                token: token,\n                exp: new Date().getTime() + 24 * 60 * 60 * 1000,\n                user,\n              })\n            );\n            history.push(\"/\");\n          })\n          .catch((err) => {\n            console.log(err.message);\n          });\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n          className=\"form flex flex-col items-center rounded bg-gray-300 p-10 shadow-md max-w-96 w-full\"\n        >\n          <div className=\"text-2xl mb-8\">Sign Up</div>\n          <div className=\"form-control flex flex-col  my-1 text-lg w-full\">\n            <label htmlFor=\"email\" className=\"flex text-xs text-gray-700\">\n              email\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className=\"flex w-full\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n            />\n            <div className=\"err text-red-600 text-xs font-mono\">\n              {errors.email && touched.email && errors.email}\n            </div>\n          </div>\n          <div className=\"form-control flex flex-col my-1 text-lg w-full\">\n            <label htmlFor=\"password\" className=\"flex text-xs text-gray-700\">\n              password\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              className=\"flex w-full\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n            />\n            <div className=\"err text-red-600 text-xs font-mono\">\n              {errors.password && touched.password && errors.password}\n            </div>\n          </div>\n          <div className=\"actions mt-3\">\n            <button\n              type=\"submit\"\n              className=\"w-full p-3 text-center text-blue-500\"\n            >\n              Create Account\n            </button>\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./Auth.scss\";\nimport SignInForm from \"../../components/organisms/Auth/SignInForm/SignInForm\";\nimport SignUpForm from \"../../components/organisms/Auth/SignInForm/SignUpForm\";\n\nexport default function Auth() {\n  const [signUp, setSignUp] = useState(false);\n  // EFFECTS\n\n  // FUNCTIONS\n\n  // RENDER\n  return (\n    <div className=\"loginPage bg-gray-800\">\n      <div className=\"flex flex-col justify-center items-center w-full h-screen max-w-md m-auto\">\n        {signUp ? <SignUpForm /> : <SignInForm />}\n        <div className=\"text-mono text-white text-xs p-2\">\n          {signUp ? (\n            <div>\n              already have an account ?{\" \"}\n              <span\n                className=\"text-blue-400 cursor-pointer\"\n                onClick={() => setSignUp(false)}\n              >\n                Login\n              </span>\n            </div>\n          ) : (\n            <div>\n              don't have an account ?{\" \"}\n              <span\n                className=\"text-blue-400 cursor-pointer\"\n                onClick={() => setSignUp(true)}\n              >\n                Create an Account\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useAppContext } from \"../../../context/AppContext\";\n\nexport default function LogoutButton(props) {\n  const { setCurrentUser, setAuthToken } = useAppContext();\n  const history = useHistory();\n\n  const logOut = () => {\n    setCurrentUser(null);\n    setAuthToken(null);\n    localStorage.removeItem(\"authToken\");\n    history.push(\"/\");\n  };\n\n  return (\n    <button onClick={logOut} {...props}>\n      Logout\n    </button>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport RelativeTime from \"dayjs/plugin/relativeTime\";\ndayjs.extend(RelativeTime);\n\nexport default function Post({ post, linked }) {\n  let MyLink = Link;\n\n  if (!linked) {\n    MyLink = ({ children }) => <div>{children}</div>;\n  }\n\n  return (\n    <div className=\"post p-4 my-2 bg-gray-700 rounded min-w-full\">\n      <MyLink to={`/post/${post.id}`}>\n        <div>\n          <header className=\"pb-2 flex items-center\">\n            <div className=\"pic w-8 h-8 overflow-hidden rounded-full bg-gray-500\">\n              <img\n                src={post.user?.profilePictureUrl}\n                alt=\"\"\n                className=\"w-full object-cover\"\n              />\n            </div>\n            <div className=\"flex flex-col px-2 \">\n              <div className=\"text-xs text-gray-400\">{post.user?.name}</div>\n              <div\n                className=\"text-xs text-gray-500\"\n                style={{ fontSize: \"0.6em\" }}\n              >\n                {dayjs(parseInt(post.createdAt)).format(\"DD MMM YYYY\")}\n              </div>\n            </div>\n          </header>\n          <p className=\"py-2\">{post.text}</p>\n        </div>\n      </MyLink>\n    </div>\n  );\n}\n","import { GraphQLClient, request } from \"graphql-request\";\nimport { API_GRAPH_URL } from \"../../config/constants\";\n\nconst client = new GraphQLClient(API_GRAPH_URL);\n\nfunction graph(QUERY, AUTH_TOKEN, VAR = {}) {\n  let response = client.request(QUERY, VAR, {\n    authorization: AUTH_TOKEN,\n  });\n\n  return response;\n}\n\nexport default graph;\n","export const API_BASE_URL = \"/api\";\nexport const API_GRAPH_URL = \"/graphql\";\n","import graph from \"./graph\";\nimport { gql } from \"graphql-request\";\n\nexport const getUser = async ({ userId, username }, AUTH_TOKEN) => {\n  const QUERY = gql`\n    query getUsers($input: UserInput) {\n      users(input: $input) {\n        id\n        name\n        username\n        bio\n        email\n        profilePictureUrl\n      }\n    }\n  `;\n\n  return graph(QUERY, AUTH_TOKEN, {\n    input: {\n      id: userId,\n    },\n  });\n};\n\nexport const updateUser = async ({ userId, data }, AUTH_TOKEN) => {\n  const QUERY = gql`\n    mutation updateUser($input: UserInput) {\n      updateUser(input: $input) {\n        id\n        name\n        username\n        bio\n        email\n        profilePictureUrl\n      }\n    }\n  `;\n\n  return graph(QUERY, AUTH_TOKEN, {\n    input: {\n      ...data,\n      id: userId,\n    },\n  });\n};\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { useAppContext } from \"../../context/AppContext\";\nimport { getUser, updateUser } from \"../../services/api/users\";\n\nexport const useGetUser = ({ userId }) => {\n  const { authToken } = useAppContext();\n  return useQuery([\"user\", userId], () => getUser({ userId }, authToken));\n};\n\nexport const useUpdateUser = () => {\n  const { authToken, currentUser } = useAppContext();\n  const queryClient = useQueryClient();\n  return useMutation(\n    ({ data }) => updateUser({ userId: currentUser.id, data }, authToken),\n    {\n      onSuccess: (data, variables) => {\n        queryClient.invalidateQueries([\"user\", currentUser.id]);\n      },\n    }\n  );\n};\n","import { Formik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { useAppContext } from \"../../../../context/AppContext\";\nimport { useGetUser, useUpdateUser } from \"../../../../hooks/api/users\";\n\nexport default function EditProfile({ onCancel }) {\n  // CONSTANTS\n  const { currentUser } = useAppContext();\n  const userQuery = useGetUser({ userId: currentUser.id });\n  const user = userQuery.data?.users[0];\n\n  const updateUserMutation = useUpdateUser();\n\n  const initialValues = {\n    name: user.name || \"\",\n    bio: user.bio || \"\",\n    profilePictureUrl: user.profilePictureUrl || \"\",\n  };\n\n  //EFFECTS\n  useEffect(() => {\n    if (updateUserMutation.isSuccess) {\n      onCancel();\n    }\n  }, [updateUserMutation.isSuccess]);\n\n  // FUNCTIONS\n\n  const handleSubmit = (values) => {\n    updateUserMutation.mutate({ data: values });\n  };\n\n  // RENDER\n  return user ? (\n    <div className=\"edit-profile m-auto max-w-4xl p-8 bg-gray-700 bg-opacity-50 rounded-xl\">\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        {({ values, errors, touched, handleSubmit, handleChange }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group my-4 flex flex-col\">\n              <label className=\"text-gray-400\">Name</label>\n              <input\n                type=\"text\"\n                placeholder=\"Your Name\"\n                name=\"name\"\n                onChange={handleChange}\n                value={values.name}\n                className=\"bg-transparent p-2 mb-2 border-b outline-none\"\n              />\n              {errors.name && (\n                <div className=\"error text-red-500 text-xs\">{errors.name}</div>\n              )}\n            </div>\n            <div className=\"form-group my-4 flex flex-col\">\n              <label className=\"text-gray-400\">Bio</label>\n              <textarea\n                type=\"text\"\n                placeholder=\"About You\"\n                name=\"bio\"\n                onChange={handleChange}\n                value={values.bio}\n                className=\"bg-transparent p-2 mb-2 border-b outline-none\"\n              />\n              {errors.bio && (\n                <div className=\"error text-red-500 text-xs\">{errors.bio}</div>\n              )}\n            </div>\n            <div className=\"form-group my-4 flex flex-col\">\n              <label className=\"text-gray-400\">Profile Picture Url</label>\n              <input\n                type=\"text\"\n                placeholder=\"link of the picture for your dp\"\n                name=\"profilePictureUrl\"\n                onChange={handleChange}\n                value={values.profilePictureUrl}\n                className=\"bg-transparent p-2 mb-2 border-b outline-none\"\n              />\n              {errors.profilePictureUrl && (\n                <div className=\"error text-red-500 text-xs\">\n                  {errors.profilePictureUrl}\n                </div>\n              )}\n            </div>\n\n            <div className=\"actions flex justify-end mt-8\">\n              <button className=\"px-4 py-2\" type=\"button\" onClick={onCancel}>\n                Cancel\n              </button>\n              <button className=\"px-4 py-2 text-blue-400\" type=\"submit\">\n                Save\n              </button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </div>\n  ) : null;\n}\n","import graph from \"./graph\";\nimport { gql } from \"graphql-request\";\n\nexport const getPosts = async ({ userId, isFollowing }, AUTH_TOKEN) => {\n  const QUERY = gql`\n    query getPosts($input: PostInput) {\n      posts(input: $input) {\n        id\n        text\n        userId\n        user {\n          id\n          name\n          username\n          profilePictureUrl\n        }\n        createdAt\n      }\n    }\n  `;\n\n  return graph(QUERY, AUTH_TOKEN, {\n    input: {\n      userId: userId,\n    },\n  });\n};\n\nexport const getPost = async ({ postId }, AUTH_TOKEN) => {\n  const QUERY = gql`\n    query getPosts($input: PostInput) {\n      posts(input: $input) {\n        id\n        text\n        userId\n        privacy\n        published\n        comments {\n          id\n          text\n        }\n        user {\n          id\n          name\n          username\n          profilePictureUrl\n        }\n        createdAt\n      }\n    }\n  `;\n\n  return graph(QUERY, AUTH_TOKEN, {\n    input: {\n      id: parseInt(postId),\n    },\n  });\n};\n\nexport const createPost = (AUTH_TOKEN) => async ({ text }) => {\n  const QUERY = gql`\n    mutation createPost($input: PostInput) {\n      createPost(input: $input) {\n        id\n        text\n        userId\n        privacy\n        published\n        comments {\n          id\n          text\n        }\n        user {\n          id\n          name\n          username\n          profilePictureUrl\n        }\n        createdAt\n      }\n    }\n  `;\n\n  return graph(QUERY, AUTH_TOKEN, {\n    input: {\n      text: text,\n    },\n  });\n};\n\nexport const updatePost = (AUTH_TOKEN) => async ({ id, text }) => {\n  const QUERY = gql`\n    mutation updatePost($input: PostInput) {\n      updatePost(input: $input) {\n        id\n        text\n        userId\n        privacy\n        published\n        comments {\n          id\n          text\n        }\n        user {\n          id\n          name\n          username\n          profilePictureUrl\n        }\n        createdAt\n      }\n    }\n  `;\n\n  return graph(QUERY, AUTH_TOKEN, {\n    input: {\n      id: id,\n      text: text,\n    },\n  });\n};\n\nexport const deletePost = (AUTH_TOKEN) => async ({ id }) => {\n  const QUERY = gql`\n    mutation deletePost($input: PostInput) {\n      deletePost(input: $input)\n    }\n  `;\n\n  return graph(QUERY, AUTH_TOKEN, {\n    input: {\n      id: parseInt(id),\n    },\n  });\n};\n","import {\n  useInfiniteQuery,\n  useMutation,\n  useQuery,\n  useQueryClient,\n} from \"react-query\";\nimport { useAppContext } from \"../../context/AppContext\";\nimport {\n  createPost,\n  deletePost,\n  getPost,\n  getPosts,\n  updatePost,\n} from \"../../services/api/posts\";\n\nexport const useGetPosts = ({ userId, isFollowing }) => {\n  const { authToken } = useAppContext();\n  let _key = [\"posts\"];\n  if (userId) {\n    _key = [\"posts\", userId];\n  }\n  return useInfiniteQuery(\n    _key,\n    ({ pageParam }) =>\n      getPosts({ userId, isFollowing, skip: pageParam }, authToken),\n    {\n      getNextPageParam: (lastPage) => (lastPage.skip ? lastPage.skip : null),\n    }\n  );\n};\n\nexport const useGetPost = ({ postId }) => {\n  const { authToken } = useAppContext();\n\n  return useQuery([\"post\", postId], () => getPost({ postId }, authToken), {\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\nexport const useCreatePost = () => {\n  const { authToken, currentUser } = useAppContext();\n  const queryClient = useQueryClient();\n\n  return useMutation(createPost(authToken), {\n    onSuccess: (data) => {\n      console.log(\"Post Created - \", data);\n      queryClient.setQueryData([\"posts\", currentUser.id], (oldData) => {\n        if (!oldData) return;\n        let _newData = JSON.parse(JSON.stringify(oldData));\n        _newData?.pages?.[0].posts.unshift(data.createPost);\n        return _newData;\n      });\n      queryClient.invalidateQueries([\"posts\", null]);\n    },\n    onError: (err) => {\n      console.log(\"Failed to create Post - \", err.message);\n    },\n  });\n};\nexport const useUpdatePost = () => {\n  const { authToken } = useAppContext();\n\n  return useMutation(updatePost(authToken), {\n    onSuccess: (data) => {\n      console.log(\"Post Updated - \", data);\n    },\n    onError: (err) => {\n      console.log(\"Failed to update Post - \", err.message);\n    },\n  });\n};\nexport const useDeletePost = () => {\n  const { authToken, currentUser } = useAppContext();\n  const queryClient = useQueryClient();\n\n  return useMutation(deletePost(authToken), {\n    onSuccess: (data, { id }) => {\n      console.log(\"Post Deleted - \", id, data);\n      queryClient.setQueryData([\"posts\", currentUser.id], (oldData) => {\n        if (!oldData) return;\n        let _newData = JSON.parse(JSON.stringify(oldData));\n        _newData?.pages?.some((page) => {\n          let _post = page.posts.find((p) => p.id == id);\n          if (_post) {\n            page.posts = page.posts.filter((p) => p.id != id);\n            return true;\n          }\n          return false;\n        });\n        return _newData;\n      });\n    },\n    onError: (err) => {\n      console.log(\"Failed to delete Post - \", err);\n    },\n  });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FollowButton from \"../../components/molecules/buttons/FollowButton\";\nimport LogoutButton from \"../../components/molecules/buttons/LogoutButton\";\nimport Post from \"../../components/molecules/Cards/Post\";\nimport EditProfile from \"../../components/organisms/Forms/EditProfile/EditProfile\";\nimport { useAppContext } from \"../../context/AppContext\";\nimport { useGetPosts } from \"../../hooks/api/posts\";\nimport { useGetUser } from \"../../hooks/api/users\";\n\nexport default function Profile() {\n  const { currentUser } = useAppContext();\n\n  const userQuery = useGetUser({ userId: currentUser.id });\n  const user = userQuery.data?.users[0];\n  const postsQuery = useGetPosts({ userId: currentUser.id });\n\n  // STATES\n  const [editProfile, setEditProfile] = useState(false);\n\n  // EFFECTS\n  // FUNCTIONS\n  // PRERENDER\n  // RENDER\n\n  return user ? (\n    <div className=\"bg-gray-800   text-white\">\n      <div className=\"container min-h-screen m-auto max-w-6xl\">\n        <header className=\"p-4 py-16 flex justify-between items-center\">\n          <div className=\"user flex items-center justify-between\">\n            <div className=\"info ml-5\">\n              <div className=\"name text-xl\">{user.name}</div>\n              <div className=\"email text-gray-400\">{user.email}</div>\n            </div>\n          </div>\n          <div className=\"actions\">\n            <button className=\"px-6\" onClick={() => setEditProfile((e) => !e)}>\n              {editProfile ? \"Cancel\" : \"Edit Profile\"}\n            </button>\n            <LogoutButton className=\"px-6 text-red-400\" />\n          </div>\n        </header>\n        {editProfile ? (\n          <EditProfile onCancel={() => setEditProfile(false)} />\n        ) : (\n          <div>\n            <main className=\"flex flex-col justify-center items-center my-5\">\n              <div className=\"pic w-36 h-36 overflow-hidden rounded-full bg-gray-500\">\n                <img\n                  src={user.profilePictureUrl}\n                  alt=\"\"\n                  className=\"w-full object-cover\"\n                />\n              </div>\n              <div className=\"info py-4 flex flex-col items-center\">\n                <div className=\"name text-2xl\">{user.name}</div>\n                {/* <div className=\"username text-gray-200\">@rohitkaushal</div> */}\n                <div className=\"actions py-4\">\n                  {/* <FollowButton className=\"text-blue-400\" /> */}\n                </div>\n                <div className=\"bio max-w-4xl py-4 text-center\">{user.bio}</div>\n              </div>\n            </main>\n            <div className=\"py-4 w-full max-w-4xl m-auto\">\n              <div className=\"post-actions my-3\">\n                <Link to=\"/create\">\n                  <button className=\"text-yellow-300\">Create New Post</button>\n                </Link>\n              </div>\n              <section className=\"flex flex-col justify-center items-center \">\n                {postsQuery.data?.pages\n                  .map((page) => page.posts)\n                  .flat()\n                  .map((post) => (\n                    <Post post={post} linked key={post.id} />\n                  ))}\n              </section>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  ) : null;\n}\n","import React, { useRef } from \"react\";\nimport { Formik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCreatePost } from \"../../../../hooks/api/posts\";\n\nexport default function CreatePost({ data, onCancel }) {\n  const initialValues = data || {\n    text: \"\",\n  };\n  const history = useHistory();\n\n  const $form = useRef();\n  const createPostMutation = useCreatePost();\n\n  const handleCreatePost = (values) => {\n    createPostMutation.mutate(values, {\n      onSuccess: () => {\n        $form.current.resetForm();\n        setTimeout(() => {\n          createPostMutation.reset();\n          history.push(\"/profile\");\n        }, 2000);\n      },\n    });\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleCreatePost}\n        innerRef={$form}\n      >\n        {({ values, errors, touched, handleSubmit, handleChange }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group my-4 flex flex-col\">\n              {/* <label className=\"text-gray-400\">Text</label> */}\n              <textarea\n                type=\"text\"\n                placeholder=\"What's in your Mind...\"\n                name=\"text\"\n                onChange={handleChange}\n                value={values.text}\n                style={{ minHeight: \"15rem\" }}\n                className=\"bg-transparent p-2 mb-2 border-b outline-none\"\n              />\n              {errors.text && (\n                <div className=\"error text-red-500 text-xs\">{errors.text}</div>\n              )}\n            </div>\n\n            <div className=\"actions flex justify-end mt-8\">\n              {/* <button className=\"px-4 py-2\" type=\"button\" onClick={onCancel}>\n                Cancel\n              </button> */}\n              <button className=\"px-4 py-2 text-blue-400\" type=\"submit\">\n                Post\n              </button>\n            </div>\n          </form>\n        )}\n      </Formik>\n      <div className=\"py-4\">\n        {createPostMutation.isSuccess && (\n          <div className=\"text-green-400 text-center\">\n            Post Created Successfully\n          </div>\n        )}\n        {createPostMutation.isError && (\n          <div className=\"text-red-400 text-center\">Some Error Occured</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CreatePost from \"../../components/organisms/Forms/CreatePost/CreatePost\";\n\nexport default function CreatePostScreen() {\n  return (\n    <div className=\"bg-gray-800   text-white\">\n      <div className=\"container min-h-screen m-auto max-w-6xl p-16\">\n        <h1 className=\"text-2xl mb-8\">Create New Post</h1>\n        <CreatePost />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Post from \"../../components/molecules/Cards/Post\";\nimport { useAppContext } from \"../../context/AppContext\";\nimport { useDeletePost, useGetPost } from \"../../hooks/api/posts\";\n\nexport default function PostScreen({ history, match }) {\n  const { currentUser } = useAppContext();\n\n  const postsQuery = useGetPost({ postId: match.params.id });\n  const deletePostMutation = useDeletePost();\n\n  const post = postsQuery.data?.posts[0];\n\n  const handleDelete = () => {\n    deletePostMutation.mutate(\n      { id: match.params.id },\n      {\n        onSuccess: () => {\n          setTimeout(() => {\n            deletePostMutation.reset();\n            history.push(\"/profile\");\n          }, 1000);\n        },\n      }\n    );\n  };\n\n  return (\n    <div className=\"bg-gray-800   text-white\">\n      <div className=\"container min-h-screen m-auto max-w-6xl p-16\">\n        <h1 className=\"text-2xl mb-8\">Post</h1>\n        {post && (\n          <div className=\"py-4\">\n            <Post post={post} />\n\n            {post.userId == currentUser.id && (\n              <div className=\"py-4\">\n                <button className=\"text-red-400\" onClick={handleDelete}>\n                  Delete Post\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n        {postsQuery.data && !post ? (\n          <div className=\"text-red-400\">Post Not Found</div>\n        ) : null}\n        {deletePostMutation.isSuccess && (\n          <div className=\"text-green-400\">Deleted Successfully !</div>\n        )}\n        {deletePostMutation.isError && (\n          <div className=\"text-red-400\">Opps Something went wrong.</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Post from \"../../components/molecules/Cards/Post\";\nimport { useAppContext } from \"../../context/AppContext\";\nimport { useGetPosts } from \"../../hooks/api/posts\";\n\nexport default function FeedScreen({}) {\n  const { currentUser } = useAppContext();\n\n  const postsQuery = useGetPosts({});\n\n  return (\n    <div className=\"bg-gray-800   text-white\">\n      <div className=\"container min-h-screen m-auto max-w-6xl p-16\">\n        <header className=\"flex justify-between\">\n          <h1 className=\"text-3xl\">Socia</h1>\n          <div className=\"user flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <Link to=\"/create\">\n                <button title=\"create post\" className=\"font-bold text-2xl\">\n                  +\n                </button>\n              </Link>\n              <Link to=\"/profile\">\n                <div className=\"info ml-5 flex items-center\">\n                  <div className=\"name px-2\">{currentUser.name}</div>\n                  <div className=\"pic w-8 h-8 overflow-hidden rounded-full bg-gray-500\">\n                    <img\n                      src={currentUser.profilePictureUrl}\n                      alt=\"\"\n                      className=\"w-full object-cover\"\n                    />\n                  </div>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </header>\n        <main className=\"py-8 max-w-3xl m-auto\">\n          {postsQuery.data?.pages\n            ?.map((page) => page.posts)\n            .flat()\n            .map((post) => (\n              <Post post={post} key={post.id} linked />\n            ))}\n        </main>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Auth from \"./containers/Auth\";\nimport { useAppContext } from \"./context/AppContext\";\nimport Profile from \"./containers/Profile\";\nimport CreatePostScreen from \"./containers/CreatePostScreen\";\nimport PostScreen from \"./containers/PostScreen\";\nimport FeedScreen from \"./containers/FeedScreen\";\n\nexport default function App() {\n  const { authToken, setAuthToken, setCurrentUser } = useAppContext();\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"authToken\");\n    try {\n      token = JSON.parse(token);\n      if (token) {\n        if (token.exp > new Date().getTime()) {\n          setAuthToken(token.token);\n          setCurrentUser(token.user);\n        } else {\n          console.log(\"token Expired\");\n          localStorage.removeItem(\"authToken\");\n        }\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          {authToken ? <Redirect to=\"/feed\" /> : <Auth />}\n        </Route>\n\n        <Route exact path=\"/auth\" component={Auth} />\n\n        {authToken && <Route exact path=\"/profile\" component={Profile} />}\n        {authToken && (\n          <Route exact path=\"/create\" component={CreatePostScreen} />\n        )}\n        {authToken && <Route exact path=\"/post/:id\" component={PostScreen} />}\n        {authToken && <Route exact path=\"/feed\" component={FeedScreen} />}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppWrapper } from \"./context/AppContext\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: (failureCount, error) => {\n        if (error) return false; // Bad Request <server gave error with reason>\n        if (failureCount < 3) return true;\n      },\n      staleTime: 5 * 60 * 1000,\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <AppWrapper>\n        <App />\n      </AppWrapper>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}